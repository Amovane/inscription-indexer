datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  // Corresponds to the cargo alias created earlier
  provider = "cargo prisma"
  // The location to generate the client. Is relative to the position of the schema
  output   = "../src/prisma.rs"
}

enum Chain {
  ETHEREUM_MAINNET
  BNBCHAIN_MAINNET
  OPBNB_MAINNET
}

enum IndexedType {
  OrdinalsTextPlain
  OrdinalsApplicationJson
}

model Tick {
  id          String     @id
  chain       Chain
  start_block BigInt
  end_block   BigInt?
  deployer    String
  p           String
  tick        String
  max         String
  lim         String
  minted      String     @default("0")
  time        DateTime   @default(now()) @db.Timestamptz(0)
  inscribes   Inscribe[]

  @@unique([chain, p, tick])
  @@map("ticks")
}

model Inscribe {
  id      String   @id
  tick    Tick     @relation(fields: [tick_id], references: [id])
  tick_id String
  block   BigInt
  amt     String
  time    DateTime @default(now()) @db.Timestamptz(0)

  @@map("inscribes")
}

model IndexedBlock {
  chain         Chain
  indexed_type  IndexedType
  indexed_block BigInt
  indexed_txi   BigInt

  @@unique([chain, indexed_type])
  @@map("indexed_blocks")
}
